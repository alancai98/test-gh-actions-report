name: Test Upload to GitHub Actions
on: [push, pull_request]

jobs:
  build:
    name: upload-test
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Upload test_report_1.json
        uses: actions/upload-artifact@v3
        with:
          path: test_report_1.json
      - name: Download test_report_1.json from `main` branch
        uses: dawidd6/action-download-artifact@v2
        id: download-report
        continue-on-error: true
        with:
          workflow: test-upload.yml
          branch: main
          path: test/test_report_1.json
      - run: ls -R .
      - name: backup case if download fails
        if: ${{ steps.download-report.outcome == 'failure' }}
        run: cat test_report_1.json
      - name: print markdown in run
        run: cat results.md >> $GITHUB_STEP_SUMMARY
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        if: github.event_name == 'pull_request'
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Conformance
      - id: get-comment-body
        run: |
          body="$(cat ./results.md)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          edit-mode: replace
      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo test --verbose -- -Z unstable-options --format json | tee test.json
      - run: cat test.json
